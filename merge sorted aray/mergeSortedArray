class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
        for(int i=0;i<n;i++){
            nums1[m+i]= nums2[i];
        }
        std::sort(nums1.begin(),nums1.end());
    }
};


// Two aarays sort without merge and extra space
        void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
         for(int i = m-1;i>=0;i--)
         {
              if(arr1[n-1]>arr2[i])
              {
                   swap(arr1[n-1],arr2[i]);
                   sort(arr1, arr1 + n);
                   i = m-1;
                   
              }
         }
        }

// This is taking long time
{ 
            void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
            int i = n-1;
            int j = 0;
            
            while(i>=0 && j<m){
                if(arr1[i]>arr2[j]){
                    swap(arr1[i],arr2[j]);
                    i--;
                    j++;
                }
                else
                {
                    break;
                }
            }
            sort(arr1,arr1+n);
            sort(arr2,arr2+m);
        } 